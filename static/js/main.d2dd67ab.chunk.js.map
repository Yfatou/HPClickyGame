{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/NavBar/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","schuffleFriend","id","alt","name","src","image","Wrapper","children","NavBar","this","message","score","topscore","Component","Jumbotron","App","state","friends","_this","cardClicked","filter","friend","console","log","clicked","i","length","setState","sort","Math","random","_this2","components_NavBar","components_Jumbotron","components_Wrapper","map","components_FriendCard","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"ggCAceA,MAXf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbC,QAAS,kBAAML,EAAMM,eAAeN,EAAMO,MAC1CN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMI,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,MAAOJ,GAAIP,EAAMO,cCD3DK,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,WCc1BC,0LAZX,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWW,KAAKf,MAAMgB,QAApC,KACAf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,UAA+BW,KAAKf,MAAMiB,MAA1C,iBAA+DF,KAAKf,MAAMkB,SAA1E,cAPWC,qBCONC,SARG,kBACjBnB,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,2FCGEc,QAAQ,GACRC,EAAW,EACXF,EAAU,6BAiFCK,6MA7EbC,MAAQ,CACNC,UACAL,WACAD,QACAD,aAKFV,eAAiB,SAAAC,GAGf,IAAMgB,EAAUC,EAAKF,MAAMC,QACrBE,EAAcF,EAAQG,OAAO,SAAAC,GAAM,OAAIA,EAAOpB,KAAOA,IAG3D,GAFAqB,QAAQC,IAAIN,GAENE,EAAY,GAAGK,QAqBhB,CAEHF,QAAQC,IAAI,SAAWJ,EAAY,GAAGK,SACtCb,EAAQ,EACRD,EAAU,yDAGV,IAAK,IAAIe,EAAI,EAAGA,EAAIR,EAAQS,OAAQD,IACtCR,EAAQQ,GAAGD,SAAU,EAGnBN,EAAKS,SAAS,CAAEV,UAASN,QAAOD,iBA/BhCY,QAAQC,IAAI,OAASJ,EAAY,GAAGK,SACpCL,EAAY,GAAGK,SAAU,EAEzBd,EAAU,4BADVC,EAIYC,IACVA,EAAWD,EACXO,EAAKS,SAAS,CAAChB,QAAOC,cAGP,KAAbA,IACFF,EAAU,gDAIZO,EAAQW,KAAK,kBAAMC,KAAKC,SAAW,KAEnCZ,EAAKS,SAAS,CAAEV,UAASN,QAAOD,qFAkB3B,IAAAqB,EAAAtB,KACP,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACmC,EAAD,CACErB,MAAOF,KAAKO,MAAML,MAClBC,SAAUH,KAAKO,MAAMJ,SACrBF,QAASD,KAAKO,MAAMN,UAEtBf,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,KACGzB,KAAKO,MAAMC,QAAQkB,IAAI,SAAAd,GAAM,OAC5B1B,EAAAC,EAAAC,cAACuC,EAAD,CACEpC,eAAgB+B,EAAK/B,eACrBC,GAAIoB,EAAOpB,GACXoC,IAAKhB,EAAOpB,GACZI,MAAOgB,EAAOhB,mBAtEVQ,aCRlByB,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d2dd67ab.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\"\n      onClick={() => props.schuffleFriend(props.id)}>\n      <div className=\"img-container\">\n        <img className=\"img\" alt={props.name} src={props.image} id={props.id}/>\n      </div>\n    </div>\n   );\n}\n\nexport default FriendCard;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default fixed-top\">\n         <ul>\n          <li className=\"title\">Clicky Game  </li>\n          <li className=\"message\">{this.props.message} </li>\n          <li className=\"scores\">Score: {this.props.score} | Top Score: {this.props.topscore} </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"header\">\n\t\t<h1>Harry Potter Clicky Game!</h1>\n\t\t<h2>Click on any image to earn a point, but don't click on any more than once!</h2>\n\t</header>\n);\n\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\";\nimport friends from \"./friends.json\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport \"./index.css\";\n\n// Variable intitialization\nlet score = 0;\nlet topscore = 0;\nlet message = \" Click an image to begin! \";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    topscore,\n    score,\n    message\n  };\n\n\n  //On click event \n  schuffleFriend = id => {\n    \n    // Filter this.state.friends for friends with an id equal to the id of the card being clicked\n    const friends = this.state.friends;\n    const cardClicked = friends.filter(friend => friend.id === id);\n    console.log(friends);\n    \n    if (! cardClicked[0].clicked) { // If the clicked card hasn't been clicked\n      console.log(\"if: \" + cardClicked[0].clicked);\n      cardClicked[0].clicked = true; // The clicked value of the card is now at true\n      score++; // The score is incremented\n      message = \" You guessed correctly \";\n\n      // If the player score is higher than the previous topscore\n      if (score > topscore) {\n        topscore = score; // The new topscore is the score\n        this.setState({score, topscore })\n      }\n\n      if (topscore === 12) { // All the card have been clicked once\n        message = \" YAY, You won!! Click a card to play again! \";\n      }\n\n      // Shuffle the cards\n      friends.sort(() => Math.random() - 0.5);\n      \n      this.setState({ friends, score, message });\n    }\n    else { // If a card is already clicked => clicked = true\n      // the score is reinitialized\n      console.log(\"else: \" + cardClicked[0].clicked);\n      score = 0;\n      message = \" You guessed incorrectly - Click again to start over! \";\n\n      //the clicked value of all the cards is reinitialized to false\n      for (let i = 0; i < friends.length; i++) {\n\t\t\t\tfriends[i].clicked = false;\n      }\n\n      this.setState({ friends, score, message });\n    }\n  };\n\n  \n  render() {\n    return (\n      <div className=\"test\">\n        <NavBar \n          score={this.state.score}\n          topscore={this.state.topscore}\n          message={this.state.message}\n        />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.friends.map(friend => (\n            <FriendCard\n              schuffleFriend={this.schuffleFriend}\n              id={friend.id}\n              key={friend.id}\n              image={friend.image}\n            />\n          ))}\n      </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}